{"version":3,"file":"static/js/7.ffba34d6.chunk.js","mappings":"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","sources":["api/api.js","api/config.js","components/MoviesListItem/MoviesListItem.styled.js","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","img/defaultImage.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { queryInstance } from './config';\n\nconst language = 'en-US';\n\nexport const getTrandingMovies = async () => {\n  const trandingPeriod = 'day';\n  try {\n    const { data } = await queryInstance(\n      `trending/movie/${trandingPeriod}?language=${language}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchForMovies = async query => {\n  const includeAdult = false;\n  const page = 1;\n  try {\n    const { data } = await queryInstance(\n      `search/movie?query=${query}&include_adult=${includeAdult}&language=${language}&page=${page}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const { data } = await queryInstance(\n      `movie/${movieId}?language=${language}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const { data } = await queryInstance(\n      `movie/${movieId}/credits?${language}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  const page = 1;\n  try {\n    const { data } = await queryInstance(\n      `movie/${movieId}/reviews?${language}&page=${page}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst accessToken =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0YjlhOGY4ODJlN2VhZTYyMTdiMmIxMzJkYzlmMjVmNyIsInN1YiI6IjY1ODJlNDI3ZjE3NTljM2ZhMjEwY2I2NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.k6GcLi7AwoXQH8XXcYQTD10rkoTo49Caw6O84bZ_YnU';\nconst baseImageUrl = 'https://image.tmdb.org/t/p/w440_and_h660_face';\n\nconst queryInstance = axios.create({\n  baseURL,\n  headers: {\n    accept: 'application/json',\n    Authorization: accessToken,\n  },\n});\n\nexport { queryInstance, baseImageUrl };\n","import styled from 'styled-components';\n\nconst Wrapper = styled('div')(() => {\n  return {\n    '.movieInfo': {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: '10px',\n      minHeight: '90px',\n      justifyContent: 'space-between',\n      '.userScore': {\n        textAlign: 'right',\n        fontSize: '0.9rem',\n      },\n    },\n  };\n});\n\nexport default Wrapper;\n","import { Link, useLocation } from 'react-router-dom';\nimport { baseImageUrl } from 'api/config';\nimport defaultImg from 'img/defaultImage';\nimport Wrapper from './MoviesListItem.styled';\n\nconst MoviesListItem = ({\n  movie: { id, title, poster_path, vote_average },\n}) => {\n  const location = useLocation();\n  return (\n    <Wrapper>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div>\n          <img\n            src={poster_path ? `${baseImageUrl}${poster_path}` : defaultImg}\n            alt=\"movie poster\"\n          />\n        </div>\n        <div className=\"movieInfo\">\n          <h4>{title}</h4>\n          <p className=\"userScore\">User score: {vote_average}</p>\n        </div>\n      </Link>\n    </Wrapper>\n  );\n};\n\nexport default MoviesListItem;\n","import styled from 'styled-components';\n\nconst Wrapper = styled('div')(() => {\n  return {\n    ul: {\n      display: 'grid',\n      maxWidth: 'calc(100vw - 40px)',\n      gridTemplateColumns: 'repeat(auto-fill, minmax(320px, 1fr))',\n      gridGap: '30px',\n      marginBottom: '40px',\n      paddingLeft: '20px',\n      paddingRight: '25px',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n    li: {\n      width: '320px',\n      backgroundColor: '#e0ddecc5',\n      overflow: 'hidden',\n      borderRadius: '5px',\n      transition: 'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      boxShadow:\n        '0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12)',\n    },\n    'li:hover': {\n      transform: 'scale(1.05)',\n    },\n  };\n});\n\nexport default Wrapper;\n","import MoviesListItem from 'components/MoviesListItem/MoviesListItem';\nimport Wrapper from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <Wrapper>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <MoviesListItem movie={movie} />\n          </li>\n        ))}\n      </ul>\n    </Wrapper>\n  );\n};\n\nexport default MoviesList;\n","import defaultImg from './defImg.jpg';\n\nexport default defaultImg;\n","import styled from 'styled-components';\n\nconst Wrapper = styled('div')(() => {\n  return {\n    form: {\n      display: 'flex',\n      gap: '20px',\n      justifyContent: 'center',\n      backgroundColor: '#e0ddecc5',\n      borderRadius: '5px',\n      margin: '10px 25px 10px 10px',\n      padding: '10px',\n    },\n    input: {\n      font: 'inherit',\n      fontSize: '20px',\n      border: 'none',\n      borderRadius: '5px',\n      outline: 'none',\n      paddingLeft: '4px',\n      paddingRright: '4px',\n    },\n    'input::placeholder': {\n      font: 'inherit',\n      fontSize: '18px',\n    },\n    button: {\n      width: 100,\n      padding: 10,\n      borderRadius: 5,\n      border: 0,\n      fontWeight: 'bold',\n      '&:hover': {\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n      },\n    },\n  };\n});\n\nexport default Wrapper;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Wrapper from './SearchForm.styled';\n\nconst SearchForm = () => {\n  const [query, setQuery] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const searchParameter = query.trim();\n    if (!searchParameter) {\n      alert('Please enter your search query!');\n      return;\n    }\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    const urlQuery = searchParams.get('query');\n    urlQuery && setQuery(urlQuery);\n  }, [searchParams]);\n\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit}>\n        <input\n          value={query}\n          onChange={handleChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </Wrapper>\n  );\n};\n\nexport default SearchForm;\n","import SearchForm from 'components/SearchForm/SearchForm';\nimport { searchForMovies } from 'api/api';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n    const getData = async () => {\n      const data = await searchForMovies(query);\n      setMovies(data.results);\n    };\n    getData();\n  }, [query]);\n\n  return (\n    <>\n      <SearchForm />\n      {query && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["language","getTrandingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$queryInstance","data","_context","prev","next","queryInstance","concat","sent","abrupt","t0","console","log","stop","apply","arguments","searchForMovies","_ref2","_callee2","query","_yield$queryInstance2","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_yield$queryInstance3","_context3","_x2","getMovieCast","_ref4","_callee4","_yield$queryInstance4","_context4","_x3","getMovieReviews","_ref5","_callee5","_yield$queryInstance5","_context5","_x4","baseImageUrl","axios","baseURL","headers","accept","Authorization","styled","display","flexDirection","padding","minHeight","justifyContent","textAlign","fontSize","_ref$movie","movie","id","title","poster_path","vote_average","location","useLocation","_jsx","Wrapper","children","_jsxs","Link","to","state","from","src","defaultImg","alt","className","ul","maxWidth","gridTemplateColumns","gridGap","marginBottom","paddingLeft","paddingRight","marginLeft","marginRight","li","width","backgroundColor","overflow","borderRadius","transition","boxShadow","transform","movies","map","MoviesListItem","form","gap","margin","input","font","border","outline","paddingRright","button","fontWeight","_useState","useState","_useState2","_slicedToArray","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","urlQuery","get","onSubmit","ev","preventDefault","trim","alert","value","onChange","target","type","autoComplete","autoFocus","placeholder","setMovies","getData","results","_Fragment","SearchForm","MoviesList"],"sourceRoot":""}